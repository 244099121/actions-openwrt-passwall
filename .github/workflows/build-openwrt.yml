#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Build OpenWrt

on:
  release:
    types: [published]
  push:
    branches:
      - dev-19.07
    paths:
      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: [started]

env:
  REPO_URL: https://github.com/Lienol/openwrt
  REPO_BRANCH: dev-19.07
  CONFIG_FILE: .config
  DIY_SH: diy.sh
  FREE_UP_DISK: false
  SSH_ACTIONS: true
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo dpkg --print-foreign-architectures
        sudo -E apt-get update
        sudo -E apt-get install docbook-dsssl
        sudo -E apt-get install jadetex 
        sudo -E apt-get install lynx
        sudo -E apt-get install links2 
        sudo -E apt-get install w3m
        sudo -E apt-get install sgmlspl
        sudo -E apt-get install opensp
        wget http://ftp.br.debian.org/debian/pool/main/d/docbook-utils/docbook-utils_0.6.14-3.3_all.deb
        sudo dpkg -i docbook-utils_0.6.14-3.3_all.deb
        sudo -E apt-get install libxml2-utils
        sudo -E apt-get install xsltproc
        wget http://ftp.cn.debian.org/debian/pool/main/a/asciidoc/asciidoc-common_9.0.0~rc2-1_all.deb
        sudo dpkg -i asciidoc-common_9.0.0~rc2-1_all.deb
        wget http://ftp.cn.debian.org/debian/pool/main/a/asciidoc/asciidoc-base_9.0.0~rc2-1_all.deb
        sudo dpkg -i asciidoc-base_9.0.0~rc2-1_all.deb
        sudo -E apt-get install dblatex
        wget http://ftp.cn.debian.org/debian/pool/main/a/asciidoc/asciidoc-dblatex_9.0.0~rc2-1_all.deb
        sudo dpkg -i asciidoc-dblatex_9.0.0~rc2-1_all.deb
        sudo -E apt-get install docbook-xsl
        wget http://ftp.us.debian.org/debian/pool/main/x/xmlto/xmlto_0.0.28-2.1_amd64.deb
        sudo dpkg -i xmlto_0.0.28-2.1_amd64.deb
        wgegt http://ftp.us.debian.org/debian/pool/main/t/texinfo/install-info_5.2.0.dfsg.1-6_amd64.deb
        sudo dpkg -i install-info_5.2.0.dfsg.1-6_amd64.deb
        sudo -E apt-get install build-essential binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
        curl -fsSL https://raw.githubusercontent.com/P3TERX/dotfiles/master/.bashrc >> ~/.bashrc

    - name: Free up disk space
      if: env.FREE_UP_DISK == 'true'
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /usr/share/dotnet
        docker rmi `docker images -q`
        sudo -E apt-get  purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get  autoremove --purge
        sudo -E apt-get  clean

    - name: Clone source code
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        ../$DIY_SH
        make defconfig

    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@main
      if: env.SSH_ACTIONS == 'true'

    - name: Download package
      id: package
      run: |
        cd openwrt
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        echo "::set-output name=status::success"

    - name: Upload bin directory
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_directory
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/targets/*/*
        rm -rf packages
        echo "::set-env name=FIRMWARE::$(pwd)"
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: actions/upload-artifact@master
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware
        path: ${{ env.FIRMWARE }}
